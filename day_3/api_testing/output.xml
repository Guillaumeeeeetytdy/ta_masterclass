<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.4 on win32)" generated="20210616 10:17:40.105" rpa="false">
<suite id="s1" name="Api Testing" source="C:\Users\rensi500\Documents\TA_masterclass\day 3\api_testing\api_testing.robot">
<test id="s1-t1" name="000. OMDB Movie Test connection">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>omdb</arg>
<arg>http://www.omdbapi.com</arg>
</arguments>
<msg timestamp="20210616 10:17:41.063" level="INFO">Creating Session using : alias=omdb, url=http://www.omdbapi.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210616 10:17:41.062" endtime="20210616 10:17:41.064"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>omdb</arg>
<arg>/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210616 10:17:41.183" level="INFO">GET Request : url=http://www.omdbapi.com/ 
 path_url=/ 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210616 10:17:41.183" level="INFO">GET Response : url=http://www.omdbapi.com/ 
 status=200, reason=OK 
 headers={'Date': 'Wed, 16 Jun 2021 08:17:40 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'public, max-age=86400', 'Expires': 'Tue, 15 Jun 2021 15:57:44 GMT', 'Last-Modified': 'Tue, 15 Jun 2021 14:57:44 GMT', 'Vary': '*, Accept-Encoding', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'Access-Control-Allow-Origin': '*', 'CF-Cache-Status': 'HIT', 'Age': '60404', 'cf-request-id': '0ab57ed1d7000010adce9cc000000001', 'Server': 'cloudflare', 'CF-RAY': '66029a62f86010ad-CPH', 'Content-Encoding': 'gzip'} 
 body=
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;OMDb API - The Open Movie Database&lt;/title&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;link rel="icon" type="image/vnd.microsoft.icon" href="favicon.ico" /&gt;
    &lt;link rel="stylesheet" href="./src/style.css" media="screen"&gt;
    &lt;link rel="stylesheet" href="./src/bootswatch.min.css"&gt;
    &lt;script type="text/javascript" src="./src/jquery-1.10.2.min.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="./src/bootstrap.min.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="./src/application.js"&gt;&lt;/script&gt;
    &lt;script&gt;
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-91042892-1', 'auto');
        ga('send', 'pageview');
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="navbar navbar-default navbar-fixed-top"&gt;
        &lt;div class="container"&gt;
            &lt;div class="navbar-header"&gt;
                &lt;a href="#top" class="navbar-brand"&gt;OMDb API&lt;/a&gt;
                &lt;button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main"&gt;
                    &lt;span class="icon-bar"&gt;&lt;/span&gt;&lt;span class="icon-bar"&gt;&lt;/span&gt;&lt;span class="icon-bar"&gt;
                    &lt;/span&gt;
                &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="navbar-collapse collapse" id="navbar-main"&gt;
                &lt;ul class="nav navbar-nav"&gt;
                    &lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#parameters"&gt;Parameters&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#changeLog"&gt;Change Log&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="apikey.aspx"&gt;API Key&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;ul class="nav navbar-nav navbar-right"&gt;
                    &lt;li style="background: #e6461a;"&gt;&lt;a href="https://www.patreon.com/join/omdb" target="_blank"&gt;Become a Patron&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="/cdn-cgi/l/email-protection#6c0e0a1e0518162c0a0d0805020b1f050b020d00420f0301" target="_blank"&gt;Contact&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="container"&gt;
        &lt;div class="page-header" id="banner"&gt;
            &lt;div class="row"&gt;
                &lt;div class="col-lg-6"&gt;
                    &lt;h1&gt;OMDb API&lt;/h1&gt;
                    &lt;p class="lead"&gt;The Open Movie Database&lt;/p&gt;
                    &lt;p&gt;The OMDb API is a RESTful web service to obtain movie information, all content and images on the site are contributed and maintained by our users.
                    &lt;br /&gt;&lt;br /&gt;
                    If you find this service useful, please consider making a &lt;a href="https://www.paypal.me/FritzAPI" target="_blank" rel="nofollow"&gt;one-time donation&lt;/a&gt; or &lt;a href="https://www.patreon.com/join/omdb" target="_blank"&gt;become a patron&lt;/a&gt;.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class="col-lg-6"&gt;
                    &lt;div class="well sponsor"&gt;
                        &lt;span style="float: left; margin-right: 15px;"&gt;&lt;img src="./src/poster.jpg" width="170" height="250"&gt;&lt;/span&gt;
                        &lt;h4 style="margin-bottom: 0.4em;"&gt;Poster API&lt;/h4&gt;
                        &lt;div class="clearfix" /&gt;
                        &lt;p&gt;The Poster API is only available to patrons. &lt;br /&gt;&lt;br /&gt;
                        Currently over 280,000 posters, updated daily with resolutions up to 2000x3000.
                        &lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="row"&gt;
                &lt;div class="col-lg-12"&gt;
                    &lt;div class="bs-component"&gt;
                        &lt;div class="alert alert-dismissable alert-info"&gt;
                            &lt;button type="button" class="close" data-dismiss="alert"&gt;Ã—&lt;/button&gt;
                            &lt;h4&gt;Attention Users&lt;/h4&gt;
                            &lt;p&gt;
                            04/08/19 - Added support for eight digit IMDb IDs.
                            &lt;br /&gt;&lt;br /&gt;
                            01/20/19 - Supressed adult content from search results.
                            &lt;br /&gt;&lt;br /&gt;
                            01/20/19 - Added Swagger files (&lt;a href="http://www.omdbapi.com/swagger.yaml" style="font-weight:bold;color:white;"&gt;YAML&lt;/a&gt;, &lt;a href="http://www.omdbapi.com/swagger.json" style="font-weight:bold;color:white;"&gt;JSON&lt;/a&gt;) to expose current API abilities and upcoming REST functions.
                            &lt;br /&gt;&lt;br /&gt;
                            &lt;a href="https://www.patreon.com/join/omdb" target="_blank" class="btn btn-default btn-sm" style="background-color:#e6461a;color:#fff;text-decoration:none;border:1px solid white;"&gt;
                                &lt;svg class="s6W-components-Icon--iconSvg" style="position: relative; top: 1px;" viewBox="0 0 8 8" width="13px" height="13px" fill="#fff" data-reactid=".0.0.0.0.0.0.$socialPatreon"&gt;&lt;path d="M2.32061871,0.367894189 C3.18961652,-0.0376047918 4.20711396,-0.109604611 5.12711165,0.16039471 C5.93360962,0.39539412 6.6591078,0.894392865 7.17010651,1.55889119 C7.67510524,2.21138955 7.96860451,3.02288751 7.99660444,3.84638544 C8.03210435,4.6978833 7.78560497,5.55788114 7.30110618,6.25987938 C6.59110797,7.31187673 5.35311108,7.98687503 4.07861429,7.999375 C3.44061589,8.000375 2.80261749,7.999875 2.1651191,7.999375 C2.17011908,6.65887837 2.1656191,5.31838174 2.16811909,3.97788511 C2.17011908,3.47138639 2.39811851,2.97288764 2.77711756,2.63638849 C3.13911665,2.30838931 3.6371154,2.13588974 4.12461417,2.17238965 C4.6291129,2.20338957 5.11311169,2.45838893 5.42761089,2.85238794 C5.75061008,3.24938694 5.89160973,3.7853856 5.80860994,4.29038433 C5.72761014,4.82138299 5.39511098,5.30638177 4.93061214,5.57838109 C4.39361349,5.90388027 3.69011526,5.91288025 3.13711665,5.61888099 C3.13761665,6.05337989 3.13661665,6.4883788 3.13761665,6.92337771 C3.63111541,7.06737734 4.15961408,7.09187728 4.66161282,6.97737757 C5.40461095,6.81487798 6.07610926,6.35987912 6.50610818,5.73538069 C6.91610715,5.14988217 7.10560668,4.41738401 7.03460685,3.70738579 C6.97460701,3.05588743 6.69410771,2.42788901 6.25160882,1.94539022 C5.84160985,1.49439136 5.29311123,1.16939217 4.69811273,1.03189252 C4.01411445,0.869392928 3.27411631,0.952892718 2.64611789,1.26789193 C1.6451204,1.7543907 0.962622121,2.82088802 0.952122147,3.93238523 C0.950122152,5.28788182 0.951622148,6.64337841 0.95112215,7.999375 C0.634622945,8.000375 0.317623743,7.999875 0.000124540763,7.999875 C0.000124540763,6.67387833 0.000624539506,5.34838167 0.000124540763,4.022885 C-0.00437544792,3.45688642 0.113124257,2.89038785 0.344123676,2.37338915 C0.7321227,1.49639135 1.4476209,0.769393179 2.32061871,0.367894189"&gt;&lt;/path&gt;&lt;/svg&gt;&amp;nbsp;&amp;nbsp;Become a Patron
                            &lt;/a&gt;
                            &lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div class="panel panel-success"&gt;
                            &lt;div class="panel-heading"&gt;
                                &lt;h3 class="panel-title"&gt;Sponsors&lt;/h3&gt;
                            &lt;/div&gt;
                            &lt;div class="panel-body"&gt;
                                &lt;a href="https://emby.media/" target="_blank"&gt;Emby&lt;/a&gt;, 
                                &lt;a href="https://trakt.tv/" target="_blank"&gt;Trakt&lt;/a&gt;, 
                                &lt;a href="http://filebot.net/" target="_blank"&gt;FileBot&lt;/a&gt;, 
                                &lt;a href="https://reelgood.com/" target="_blank"&gt;Reelgood&lt;/a&gt;, 
                                &lt;a href="http://xirvik.com/" target="_blank"&gt;Xirvik Servers&lt;/a&gt;, 
                                &lt;a href="https://www.yidio.com/" target="_blank"&gt;Yidio&lt;/a&gt;, 
                                &lt;a href="https://mi.tv/co/programacion" target="_blank"&gt;mi.tv&lt;/a&gt;, 
                                &lt;a href="https://couchpop.com/" target="_blank"&gt;Couchpop&lt;/a&gt;, 
                                &lt;a href="https://key.video/" target="_blank"&gt;Key Video&lt;/a&gt;, 
                                &lt;a href="https://www.whats-on-netflix.com/" target="_blank"&gt;What's on Netflix&lt;/a&gt;, 
                                &lt;a href="https://edureviewer.com" target="_blank"&gt;Edu Reviewer&lt;/a&gt;, 
                                &lt;a href="https://flixboss.com" target="_blank"&gt;Flixboss&lt;/a&gt;, 
                                &lt;a href="https://StreamingMoviesRight.com/" target="_blank"&gt;StreamingMoviesRight&lt;/a&gt;, 
                                &lt;a href="https://tt.edu.au/" target="_blank"&gt;White Card&lt;/a&gt;,
                                &lt;a href="https://streamcentrum.se/" target="_blank"&gt;Streamcentrum.se&lt;/a&gt;,
                                &lt;a href="https://bedste-webhotel.dk/" target="_blank"&gt;Bedste Webhotel&lt;/a&gt;,
                                &lt;a href="https://scripts-onscreen.com/" target="_blank"&gt;Scripts on Screen&lt;/a&gt;,
                                &lt;a href="https://writersperhour.com/write-my-paper" target="_blank"&gt;Writers Per Hour&lt;/a&gt;,
                                &lt;a href="https://www.dvdlady.com" target="_blank"&gt;Classic Movies&lt;/a&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;!-- Usage --&gt;
        &lt;div class="bs-docs-section" id="usage"&gt;
            &lt;div class="row"&gt;
                &lt;div class="col-lg-12"&gt;
                    &lt;div class="page-header"&gt;
                        &lt;h1&gt;Usage&lt;/h1&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210616 10:17:41.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210616 10:17:41.067" endtime="20210616 10:17:41.185"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210616 10:17:41.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 10:17:41.187" endtime="20210616 10:17:41.189"></status>
</kw>
<status status="PASS" starttime="20210616 10:17:41.060" endtime="20210616 10:17:41.189" critical="yes"></status>
</test>
<test id="s1-t2" name="001. OMDB Movie Get request with i argument">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>apikey=2aa69e5c</arg>
<arg>i=tt1285016</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20210616 10:17:41.194" level="INFO">${data} = {'apikey': '2aa69e5c', 'i': 'tt1285016'}</msg>
<status status="PASS" starttime="20210616 10:17:41.192" endtime="20210616 10:17:41.195"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>omdb</arg>
<arg>/</arg>
<arg>params=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210616 10:17:41.254" level="INFO">GET Request : url=http://www.omdbapi.com/?apikey=2aa69e5c&amp;i=tt1285016 
 path_url=/?apikey=2aa69e5c&amp;i=tt1285016 
 headers={'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210616 10:17:41.255" level="INFO">GET Response : url=http://www.omdbapi.com/?apikey=2aa69e5c&amp;i=tt1285016 
 status=200, reason=OK 
 headers={'Date': 'Wed, 16 Jun 2021 08:17:40 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'public, max-age=86400', 'Expires': 'Wed, 16 Jun 2021 09:15:35 GMT', 'Last-Modified': 'Wed, 16 Jun 2021 08:15:35 GMT', 'Vary': '*, Accept-Encoding', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'Access-Control-Allow-Origin': '*', 'CF-Cache-Status': 'HIT', 'Age': '125', 'cf-request-id': '0ab57ed223000010ad97322000000001', 'Server': 'cloudflare', 'CF-RAY': '66029a63694c10ad-CPH', 'Content-Encoding': 'gzip'} 
 body={"Title":"The Social Network","Year":"2010","Rated":"PG-13","Released":"01 Oct 2010","Runtime":"120 min","Genre":"Biography, Drama","Director":"David Fincher","Writer":"Aaron Sorkin (screenplay), Ben Mezrich (book)","Actors":"Jesse Eisenberg, Rooney Mara, Bryan Barter, Dustin Fitzsimons","Plot":"As Harvard student Mark Zuckerberg creates the social networking site that would become known as Facebook, he is sued by the twins who claimed he stole their idea, and by the co-founder who was later squeezed out of the business.","Language":"English, French","Country":"USA","Awards":"Won 3 Oscars. Another 169 wins &amp; 186 nominations.","Poster":"https://m.media-amazon.com/images/M/MV5BOGUyZDUxZjEtMmIzMC00MzlmLTg4MGItZWJmMzBhZjE0Mjc1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg","Ratings":[{"Source":"Internet Movie Database","Value":"7.7/10"},{"Source":"Rotten Tomatoes","Value":"96%"},{"Source":"Metacritic","Value":"95/100"}],"Metascore":"95","imdbRating":"7.7","imdbVotes":"638,542","imdbID":"tt1285016","Type":"movie","DVD":"05 Jun 2012","BoxOffice":"$96,962,694","Production":"Scott Rudin Productions, Trigger Street Productions, Michael De Luca","Website":"N/A","Response":"True"} 
 </msg>
<msg timestamp="20210616 10:17:41.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210616 10:17:41.196" endtime="20210616 10:17:41.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210616 10:17:41.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 10:17:41.257" endtime="20210616 10:17:41.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20210616 10:17:41.263" level="INFO">${response_content} = {'Title': 'The Social Network', 'Year': '2010', 'Rated': 'PG-13', 'Released': '01 Oct 2010', 'Runtime': '120 min', 'Genre': 'Biography, Drama', 'Director': 'David Fincher', 'Writer': 'Aaron Sorkin (sc...</msg>
<status status="PASS" starttime="20210616 10:17:41.263" endtime="20210616 10:17:41.263"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>Title</arg>
</arguments>
<status status="PASS" starttime="20210616 10:17:41.264" endtime="20210616 10:17:41.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_content['Title']}</arg>
<arg>The Social Network</arg>
</arguments>
<status status="PASS" starttime="20210616 10:17:41.270" endtime="20210616 10:17:41.271"></status>
</kw>
<doc>i stands for imdb id</doc>
<status status="PASS" starttime="20210616 10:17:41.191" endtime="20210616 10:17:41.272" critical="yes"></status>
</test>
<status status="PASS" starttime="20210616 10:17:40.121" endtime="20210616 10:17:41.275"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Api Testing">Api Testing</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
